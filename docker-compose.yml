version: '3'
services:
  nginx:
    image: nginx:1.17.9-alpine
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx/auth:/etc/nginx/auth
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    links:
      - app
      - imgproxy
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  app:
    image: lucasgallen/patchwork_rails_app:latest
    container_name: 'patchwork_web'
    depends_on:
      - db
      - imgproxy
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      PGPASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      RAILS_ENV: production
      BUNDLE_PATH: /usr/local/bundle
      NODE_PATH: node_modules
      RUBYOPT: -W:no-deprecated -W:no-experimental
      DATABASE_HOST: db
      IMGPROXY_HOST: ${IMGPROXY_HOST}
      IMGPROXY_PORT: 8080
      IMGPROXY_KEY: ${IMGPROXY_KEY}
      IMGPROXY_SALT: ${IMGPROXY_SALT}
    volumes:
      - .:/app
      - ./data/nginx/conf.d:/usr/src/app/data/nginx/conf.d
      - gems:/usr/local/bundle
      - node_modules:/usr/src/app/node_modules
    expose:
      - "3002"
    links:
      - imgproxy

  imgproxy:
    image: darthsim/imgproxy:latest
    container_name: 'imgproxy'
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY:  ${AWS_SECRET_ACCESS_KEY}
      IMGPROXY_S3_REGION: 'eu-west-3'
      IMGPROXY_KEY: ${IMGPROXY_KEY}
      IMGPROXY_SALT: ${IMGPROXY_SALT}
      IMGPROXY_QUALITY: ${IMGPROXY_QUALITY}
      IMGPROXY_MAX_SRC_FILE_SIZE: 5000000 # 5MB
      IMGPROXY_USE_S3: 'true'
      IMGPROXY_DEVELOPMENT_ERRORS_MODE: 'true'
      IMGPROXY_LOG_LEVEL: 'debug'
      IMGPROXY_CACHE_CONTROL_PASSTHROUGH: 'true'
    expose:
      - "8080"

  db:
    image: postgres:11
    container_name: patchwork_db
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    expose:
      - "5432"
    volumes:
      - dbdata:/var/lib/postgresql/data

volumes:
  gems:
  node_modules:
  dbdata:
